{
  "name": "yash-neelima",
  "version": "1.1.0",
  "description": "My first godspeed project.",
  "main": "dist/index.js",
  "scripts": {
    "gen-crud-api": "npx @godspeedsystems/api-generator",
    "dev": "run-script-os",
    "dev:win32": "nodemon --watch src -e ts,js,yaml,json -r dotenv src\\index.ts",
    "dev:darwin:linux": "nodemon --watch src -e ts,js,yaml,json -r dotenv ./src/index.ts",
    "dev:default": "nodemon --watch src -e ts,js,yaml,json -r dotenv ./src/index.ts",
    "build": "run-script-os",
    "build:win32": "npm run clean && tsc --noEmit && mkdir dist && npx swc src -d dist --strip-leading-paths && copyfiles -a -u 1 \"src/**/*.!(ts)\" dist && copyfiles -a \"config/**/*\" dist && copyfiles -a -u 2 \"src/mappings/**/*\" \"dist/mappings\" && if exist README.md copy README.md dist\\ && copy tsconfig.json dist\\",
    "build:darwin:linux": "npm run clean && tsc --noEmit && mkdir -p dist && npx swc src -d dist --strip-leading-paths && rsync -a --exclude '*.ts' ./src/ ./dist/ && rsync -a ./config/ ./dist/config/ && rsync -a ./src/mappings/ ./dist/mappings/ && rsync -a ./src/datasources/ ./dist/datasources/ && rsync -a ./src/plugins/ ./dist/plugins/ && rsync -a ./src/eventsources/ ./dist/eventsources/ && rsync -a ./src/events/ ./dist/events/ && rsync -a ./src/definitions/ ./dist/definitions/ && [ -f README.md ] && cp README.md ./dist/ || true && cp tsconfig.json ./dist/",
    "build:default": "npm run clean && tsc --noEmit && rsync -a --exclude '*.ts' ./src/ ./dist/ && rsync -a ./config/ ./dist/config && rsync -a ./src/mappings/ ./dist/mappings",
    "preview": "run-script-os",
    "preview:win32": "node dist\\index.js",
    "preview:darwin:linux": "node dist/index.js",
    "preview:default": "node dist/index.js",
    "clean": "run-script-os",
    "clean:win32": "if exist dist rmdir /s /q dist",
    "clean:darwin:linux": "rm -rf dist",
    "clean:default": "rm -rf dist",
    "prisma-db-push": "for i in src/datasources/*.prisma; do npx --yes prisma db push --schema $i; done;",
    "prisma-generate": "for i in src/datasources/*.prisma; do npx --yes prisma generate --schema $i; done;",
    "serve": "npm run clean && nodemon --watch src --watch config --watch mappings -e ts,js,yaml,json,.env --exec \"npm run build && npm run preview\""
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@swc/cli": "^0.7.7",
    "@swc/core": "^1.11.24",
    "@types/config": "^3.3.5",
    "@types/cors": "^2.8.18",
    "@types/express-fileupload": "^1.5.1",
    "@types/node": "^22.15.19",
    "@types/passport": "^1.0.17",
    "@types/passport-github2": "^1.2.9",
    "@types/passport-google-oauth2": "^0.1.10",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-linkedin-oauth2": "^1.5.6",
    "copyfiles": "^2.4.1",
    "nodemon": "^3.1.10",
    "run-script-os": "^1.1.6",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@godspeedsystems/core": "^2.5.4",
    "@godspeedsystems/express-prometheus-middleware": "^0.0.1",
    "@godspeedsystems/metrics": "^0.0.3",
    "@godspeedsystems/plugins-axios-as-datasource": "^1.0.6",
    "@godspeedsystems/plugins-express-as-http": "^1.0.25",
    "@prisma/client": "^6.8.2",
    "@types/body-parser": "^1.19.5",
    "@types/express": "^5.0.2",
    "body-parser": "^2.2.0",
    "config": "^4.0.0",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "express-fileupload": "^1.5.1",
    "express-session": "^1.18.1",
    "passport": "^0.7.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth2": "^0.2.0",
    "passport-jwt": "^4.0.1",
    "passport-linkedin-oauth2": "^2.0.0",
    "pino-pretty": "^13.0.0",
    "prisma": "^6.8.2"
  },
  "packageManager": "pnpm@10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977"
}
